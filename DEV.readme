1 - create-react-app@14.2.16
2 - instalar prisma 5.1.21
3 - criar con na neon, e mudar o computed para o minimo para consumir menos valor possivel
4 - configurar conection string no env
5 - gerar migration
6 - instalar > npx shadcn@2.1.3 int 
mover para lib para dentro de app e colocar _ na frente pra deixar privada
alterar o componentes.json arquivos de cofiguracao dos compoentes do shadcn colocando para apontar dentro da pasta app
7 - clerk autenticacao npm install @clerk/nextjs@5.7.5
8 - clerk themes npm install @clerk/themes@2.1.37

extensoes
- simple react snippets
- tailwind intelisense
- instalar eslint
- instalar Prettier - Code formatter
- instalar Plugin Prettier para tailwind,  doc https://tailwindcss.com/blog/automatic-class-sorting-with-prettier
   npm install -D prettier prettier-plugin-tailwindcss 
  
nest obs.:
_ na frente do nome da pasta para deixar privada


git hooks sao comandos que rodamos antes de fazer um commit
formatar codigo com prettier e rodar eslint independente do usuario ter ou nao na maquina

npm install -D husky@9.1.6
npm install -D lint-staged@12.3.2

// para inicializar o husky no projeto
npx husky init 

// vai criar o arquivo pre-commit dentro dele configuramos o que queremos rodar antes do commit

ex.
npx lint-staged // s√≥ roda o comando nos arquivos "staged" ou seja que vao subir
criamos o arquivo .lintstagedrc.json na raiz do projeto com a configuracao para filtrar apenas os arquivos staged para que sejam formatados